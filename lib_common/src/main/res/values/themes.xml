<resources xmlns:tools="http://schemas.android.com/tools" tools:ignore="NewApi">

    <!-- 全局app样式 -->
    <style name="AppTheme" parent="AppTheme.Base" />

    <style name="AppTheme.Base" parent="Theme.AppCompat">
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
        <!-- 设置页面切换动画 -->
        <item name="android:windowAnimationStyle">@style/ActivityAnimation</item>
        <!-- 字体颜色 -->
        <item name="colorPrimary">@color/defaultPrimary</item>
        <!-- 状态栏栏颜色 -->
        <item name="colorPrimaryDark">@color/defaultPrimaryDark</item>
        <!-- 状态栏深色UI -->
        <item name="android:windowLightStatusBar">true</item>
        <!-- 导航栏颜色 -->
        <item name="android:navigationBarColor">@color/defaultNavigationBar</item>
        <!-- 页面背景色 -->
        <item name="android:windowBackground">@color/defaultWindowBackground</item>
        <!-- 控件被选中时的颜色 -->
        <item name="colorAccent">@color/defaultAccent</item>
        <!-- 控制控件的默认颜色 -->
        <item name="colorControlNormal">@color/defaultControlNormal</item>
        <!-- 剔除控件的点击效果 -->
        <item name="selectableItemBackground">@null</item>
        <item name="selectableItemBackgroundBorderless">@null</item>
        <!-- 剔除控件的阴影效果 -->
        <item name="buttonStyle">@style/Widget.AppCompat.Button.Borderless</item>
    </style>

    <!-- animation 样式（切换activity时调用） -->
    <style name="ActivityAnimation" parent="@android:style/Animation">
        <item name="android:activityOpenEnterAnimation">@anim/set_translate_right_in</item>
        <item name="android:activityOpenExitAnimation">@anim/set_translate_left_out</item>
        <item name="android:activityCloseEnterAnimation">@anim/set_translate_left_in</item>
        <item name="android:activityCloseExitAnimation">@anim/set_translate_right_out</item>
    </style>

    <!-- 布局画高线样式 -->
    <style name="LineHeight">
        <item name="android:layout_width">1dp</item>
        <item name="android:layout_height">match_parent</item>
        <item name="android:background">@color/bgLine</item>
    </style>

    <style name="LineConstraintHeight" parent="LineHeight">
        <item name="android:layout_width">1dp</item>
        <item name="android:layout_height">0dp</item>
        <item name="layout_constraintTop_toTopOf">parent</item>
        <item name="layout_constraintBottom_toBottomOf">parent</item>
    </style>

    <!-- 布局画横线样式 -->
    <style name="LineWidth">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">1dp</item>
        <item name="android:background">@color/bgLine</item>
    </style>

    <style name="LineConstraintWidth" parent="LineWidth">
        <item name="android:layout_width">0dp</item>
        <item name="android:layout_height">1dp</item>
        <item name="layout_constraintEnd_toEndOf">parent</item>
        <item name="layout_constraintStart_toStartOf">parent</item>
    </style>

    <!-- 文本阴影样式 -->
    <style name="TextShadow">
        <item name="android:shadowColor">@color/bgShadow</item>
        <item name="android:shadowRadius">1</item>
        <item name="android:shadowDx">3</item>
        <item name="android:shadowDy">3</item>
    </style>

    <!-- 顶部弹窗动画 -->
    <style name="PushTopAnimStyle">
        <!-- 指定显示的动画xml -->
        <item name="android:windowEnterAnimation">@anim/set_translate_top_in</item>
        <!-- 指定消失的动画xml -->
        <item name="android:windowExitAnimation">@anim/set_translate_top_out</item>
    </style>

    <!-- 底部弹窗动画 -->
    <style name="PushBottomAnimStyle">
        <!-- 指定显示的动画xml -->
        <item name="android:windowEnterAnimation">@anim/set_translate_bottom_in</item>
        <!-- 指定消失的动画xml -->
        <item name="android:windowExitAnimation">@anim/set_translate_bottom_out</item>
    </style>

    <!-- 左侧弹窗动画 -->
    <style name="PushLeftAnimStyle">
        <!-- 指定显示的动画xml -->
        <item name="android:windowEnterAnimation">@anim/set_translate_left_in</item>
        <!-- 指定消失的动画xml -->
        <item name="android:windowExitAnimation">@anim/set_translate_left_out</item>
    </style>

    <!-- 右侧弹窗动画 -->
    <style name="PushRightAnimStyle">
        <!-- 指定显示的动画xml -->
        <item name="android:windowEnterAnimation">@anim/set_translate_right_in</item>
        <!-- 指定消失的动画xml -->
        <item name="android:windowExitAnimation">@anim/set_translate_right_out</item>
    </style>

    <!-- 去除动画 -->
    <style name="NoAnimTheme" parent="AppTheme">
        <item name="android:windowAnimationStyle">@null</item>
    </style>

    <!-- 透明主题
        override fun onCreate(savedInstanceState: Bundle?) {
            super.onCreate(savedInstanceState)
            overridePendingTransition(R.anim.set_alpha_trans_in, R.anim.set_alpha_no)
        }

        override fun finish() {
            super.finish()
            overridePendingTransition(R.anim.set_alpha_no, R.anim.set_alpha_trans_out)
        }

        override fun initView() {
            requestedOrientation = if (Build.VERSION.SDK_INT == Build.VERSION_CODES.O) {
                ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED
            } else {
                ActivityInfo.SCREEN_ORIENTATION_PORTRAIT
            }
        }
    -->
    <style name="TransTheme" parent="NoAnimTheme">
        <item name="android:windowIsTranslucent">true</item>
        <item name="android:windowBackground">@android:color/transparent</item>
    </style>

    <!-- 数据请求的动画样式 -->
    <style name="LoadingStyle" parent="Theme.AppCompat.Light.DarkActionBar">
        <item name="android:windowFrame">@null</item>
        <item name="android:windowBackground">@drawable/shape_loading_bg</item>
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowIsFloating">true</item>
        <item name="android:windowContentOverlay">@null</item>
        <item name="android:background">@null</item>
        <item name="android:backgroundDimEnabled">false</item>
    </style>

    <!-- 系统默认提示框样式 -->
    <style name="AndDialogStyle" parent="Theme.AppCompat.Light.DarkActionBar">
        <item name="android:width">600mm</item>
        <!-- 去除标题头等多余的部分 -->
        <item name="android:windowFrame">@null</item>
        <item name="android:windowNoTitle">true</item>
        <!-- 背景颜色 -->
        <item name="android:windowBackground">@color/white</item>
        <item name="android:windowIsFloating">true</item>
        <item name="android:windowContentOverlay">@null</item>
        <!-- 提示框背景颜色 -->
        <item name="android:background">@null</item>
        <item name="android:backgroundDimEnabled">true</item>
        <!-- 标题，确认取消按钮的颜色 -->
        <item name="android:textColor">@color/blue_3d81f2</item>
        <!-- 内容颜色 -->
        <item name="android:textColorPrimary">@color/grey_333333</item>
    </style>

    <!-- App全局定义提示框样式 -->
    <style name="DialogStyle" parent="Theme.AppCompat.Light.DarkActionBar">
        <item name="android:windowFrame">@null</item>
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowBackground">@color/white_00ffffff</item>
        <item name="android:windowIsFloating">true</item>
        <item name="android:windowContentOverlay">@null</item>
        <item name="android:background">@null</item>
        <item name="android:backgroundDimEnabled">true</item>
    </style>

    <!--
         全局默认tablayout样式
         app:tabMode="scrollable"
         app:tabPaddingEnd="0dp"
         app:tabPaddingStart="0dp"
         app:tabIndicatorFullWidth = false 指示器宽度跟随文本宽度
         实际项目中往往会有自定义的导航栏，此处在原有的基础上在扩展一些属性 -->
    <style name="TabLayoutStyle" parent="Base.Widget.Design.TabLayout">
        <item name="tabBackground">@android:color/transparent</item>
        <item name="tabRippleColor">@android:color/transparent</item>
        <item name="tabIndicator">@drawable/layer_list_tab_line</item>
        <item name="tabIndicatorFullWidth">false</item>
        <item name="tabSelectedTextColor">@color/blue_0d86ff</item>
        <item name="tabTextColor">@color/grey_333333</item>
        <item name="android:overScrollMode">never</item>
        <item name="tabPaddingStart">0dp</item>
        <item name="tabPaddingTop">0dp</item>
        <item name="tabPaddingEnd">0dp</item>
        <item name="tabPaddingBottom">0dp</item>
        <item name="tabMinWidth">0dp</item>
    </style>

</resources>
