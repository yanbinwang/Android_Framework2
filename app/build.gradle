plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            v1SigningEnabled true
            v2SigningEnabled true
        }
        debug {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

//    sourceSets {
//        main {
//            res {
//                srcDirs "src/main/res"
//                srcDirs "src/main/res-bg"
//                srcDirs "src/main/res-race"
//            }
//        }
//    }

    namespace 'com.example.mvvm'
    compileSdk build_versions.compileSdkVersion

    defaultConfig {
        applicationId build_config.applicationId
        minSdk build_versions.minSdkVersion
        targetSdk build_versions.targetSdkVersion
        versionCode build_versions.versionCode
        versionName build_versions.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        //减少语言支持
        resourceConfigurations += ['zh']
        //dex突破65535的限制
        multiDexEnabled true
        //arouter编译
        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
        //Manifest配置引用
        manifestPlaceholders = [
                PACKAGE_NAME   : build_config.applicationId,
                DESIGN_WIDTH   : build_config.DESIGN_WIDTH,
                DESIGN_HEIGHT  : build_config.DESIGN_HEIGHT,
                GOOGLE_AUTH_API: build_config.GOOGLE_AUTH_API
        ]
    }

    buildFeatures {
        dataBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            //架构支持
            ndk {
                abiFilter "armeabi"
            }

            //移除无用资源
            splits {
                density {
                    enable true
                    reset()
                    include "mipmap-hdpi", "mipmap-xhdpi", "mipmap-xxhdpi"
                    compatibleScreens 'small', 'normal', 'large', 'xlarge'
                }
            }

            //去除gradle升级版本后映射文件的警告
            lintOptions {
                checkReleaseBuilds false
                abortOnError false
            }

            minifyEnabled true//最小化资源包
            shrinkResources true//去掉无用资源
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            applicationVariants.all { variant ->
                variant.outputs.all {
                    //输出apk---包名_v版本名_日期.apk
                    outputFileName = "example_v${variant.versionName}_${new Date().format('yyyyMMdd')}.apk"
                }
            }
        }
    }
    lint {
        disable 'GoogleAppIndexingWarning'
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    testImplementation "junit:junit:$build_versions.junit"
    androidTestImplementation "androidx.test.ext:junit:$build_versions.ext_junit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$build_versions.espresso_core"
    //基础库
    implementation project(':module_home')
    implementation project(':module_account')
    //页面路由
    implementation deps.alibaba.arouter
    kapt deps.alibaba.arouter_compiler
}